{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"prestataireUpdateManege\",\n  data: () => {\n    return {\n      id_user: null,\n      id: null,\n      manege: {},\n      name: null,\n      description: null,\n      types: null,\n      type: null,\n      taille: null\n    };\n  },\n  methods: {\n    goTo(path) {\n      this.$router.replace(path);\n    },\n    getData() {\n      this.id_user = this.$store.state.user.id;\n      this.id = this.$route.params.id;\n      axios({\n        method: 'get',\n        url: 'http://localhost:3000/prestataires/' + this.id_user + '/manege/' + this.id\n      }).then(result => {\n        this.manege = result.data.data.manege;\n        this.types = result.data.data.types;\n        this.name = this.manege.name;\n        this.description = this.manege.description;\n        this.type = this.manege.type;\n        this.taille = this.manege.taille_min;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    update() {\n      let error = false;\n      if (!this.name) {\n        document.querySelector('#name').style.borderColor = 'red';\n        error = true;\n      } else document.querySelector('#name').style.borderColor = 'black';\n      if (this.taille === '' || this.taille < 0) {\n        document.querySelector('#taille').style.borderColor = 'red';\n        error = true;\n      } else document.querySelector('#taille').style.borderColor = 'black';\n      if (!error) {\n        axios({\n          method: 'post',\n          url: 'http://localhost:3000/prestataires/' + this.id_user + '/manege/' + this.id + '/update',\n          data: {\n            name: this.name,\n            description: this.description,\n            type: this.type,\n            taille_min: this.taille\n          }\n        }).then(result => {\n          this.$store.commit('setMessage', result.data);\n          this.getData();\n        }).catch(error => {\n          this.message = error;\n          console.log(error);\n        });\n      }\n    }\n  },\n  mounted() {\n    this.getData();\n  }\n};","map":{"version":3,"mappings":"AA6BA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAJ;MACAK;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MAAA;IAAA;IACAC;MACA;MACA;MACAC;QACAC;QACAC;MACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;QACAC;MACA;IACA;IACAC;MACA;MACA;QAAAC;QAAAC;MAAA,OACAD;MACA;QAAAA;QAAAC;MAAA,OACAD;MACA;QACAL;UACAC;UACAC;UACAb;YACAD;YACAK;YACAE;YACAY;UACA;QACA;UACA;UACA;QACA;UACA;UACAJ;QACA;MACA;IACA;EACA;EACAK;IAAA;EAAA;AACA","names":["name","data","id_user","id","manege","description","types","type","taille","methods","goTo","getData","axios","method","url","console","update","document","error","taille_min","mounted"],"sourceRoot":"src/components/prestataires/manege","sources":["prestataireUpdateManege.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"background-color: #3f4545; margin: 10%; padding: 3%\">\r\n      <h1 style=\"color: white;\">{{this.manege.name}}</h1>\r\n      <form>\r\n        <h4>{{ $t('attribute.name') }}</h4>\r\n        <input id=\"name\" style=\"background-color: white\" v-model=\"name\" type=\"text\" required />\r\n\r\n        <h4>{{ $t('attribute.description') }}</h4>\r\n        <textarea v-model=\"description\" type=\"text\" required></textarea>\r\n\r\n        <h4>{{ $t('attribute.type') }}</h4>\r\n        <select v-model=\"type\" style=\"background-color: white; width: 100%\">\r\n          <option v-for=\"(type,index) in types\" :key=\"'prestataire-update-type-'+index\" :value=\"type.id\">\r\n            {{type.libelle}}\r\n          </option>\r\n        </select>\r\n\r\n        <h4>{{ $t('attribute.taille') }}</h4>\r\n        <input id=\"taille\" v-model=\"taille\" type=\"number\" required />\r\n\r\n        <v-btn dark @click=\"update()\">{{ $t('button.change') }}</v-btn>\r\n        <v-btn @click=\"goTo('/prestataire/maneges')\">{{ $t('button.back') }}</v-btn>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"prestataireUpdateManege\",\r\n  data:()=>{\r\n    return{\r\n      id_user:null,\r\n      id:null,\r\n      manege: {},\r\n      name:null,\r\n      description:null,\r\n      types:null,\r\n      type:null,\r\n      taille:null\r\n    }\r\n  },\r\n  methods:{\r\n    goTo(path){this.$router.replace(path)},\r\n    getData(){\r\n      this.id_user = this.$store.state.user.id\r\n      this.id = this.$route.params.id\r\n      axios({\r\n        method: 'get',\r\n        url: 'http://localhost:3000/prestataires/'+this.id_user+'/manege/'+this.id\r\n      }).then(result=>{\r\n        this.manege = result.data.data.manege\r\n        this.types = result.data.data.types\r\n        this.name = this.manege.name\r\n        this.description = this.manege.description\r\n        this.type = this.manege.type\r\n        this.taille = this.manege.taille_min\r\n      }).catch(error=>{\r\n        console.log(error)\r\n      })\r\n    },\r\n    update(){\r\n      let error = false\r\n      if(!this.name) {document.querySelector('#name').style.borderColor = 'red'; error=true}\r\n      else document.querySelector('#name').style.borderColor = 'black'\r\n      if (this.taille === '' || this.taille<0) {document.querySelector('#taille').style.borderColor = 'red'; error=true}\r\n      else document.querySelector('#taille').style.borderColor = 'black'\r\n      if(!error){\r\n        axios({\r\n          method: 'post',\r\n          url: 'http://localhost:3000/prestataires/' + this.id_user + '/manege/' + this.id + '/update',\r\n          data: {\r\n            name: this.name,\r\n            description: this.description,\r\n            type: this.type,\r\n            taille_min: this.taille\r\n          }\r\n        }).then(result => {\r\n          this.$store.commit('setMessage', result.data)\r\n          this.getData()\r\n        }).catch(error => {\r\n          this.message = error\r\n          console.log(error)\r\n        })\r\n      }\r\n    }\r\n  },\r\n  mounted(){this.getData()}\r\n}\r\n</script>\r\n<style>\r\ninput,select,textarea{\r\n  border: solid 2px;\r\n  background-color: white;\r\n  width: 100%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}