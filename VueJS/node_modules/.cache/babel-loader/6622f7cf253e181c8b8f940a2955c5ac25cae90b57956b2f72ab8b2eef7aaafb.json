{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"userLogin\",\n  data: () => ({\n    firstname: null,\n    surname: null,\n    password: null,\n    password2: null,\n    email: null\n  }),\n  methods: {\n    signup() {\n      document.querySelector('#signup').style.display = 'block';\n    },\n    signupPost() {\n      if (this.validateLogin() && this.validateSignup()) {\n        axios({\n          method: 'post',\n          url: 'http://localhost:3000/users/signup',\n          data: {\n            firstname: this.firstname,\n            surname: this.surname,\n            password: this.password,\n            email: this.email\n          }\n        }).then(result => {\n          location.reload();\n          this.$store.commit('setMessage', {\n            success: 1,\n            data: result.data.data.data\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n    login() {\n      if (this.validateLogin()) {\n        axios({\n          method: 'post',\n          url: 'http://localhost:3000/users/login',\n          data: {\n            firstname: this.firstname,\n            surname: this.surname,\n            password: this.password\n          }\n        }).then(result => {\n          let data = result.data.data;\n          let token = result.data.data.token;\n          axios.defaults.headers.common['Authorization'] = token;\n          this.$store.commit('setMessage', {\n            success: data.success,\n            data: data.message\n          });\n          if (data.data.length !== 0) {\n            this.$store.commit('setUser', data.data);\n            let role = data.data.role;\n            if (role === 'user') this.$router.replace('/');else this.$router.replace('/' + data.data.role);\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n    validateLogin() {\n      let valid = true;\n      if (!this.firstname) {\n        document.querySelector('#firstname').style.borderColor = 'red';\n        valid = false;\n      } else document.querySelector('#firstname').style.borderColor = 'black';\n      if (!this.surname) {\n        document.querySelector('#surname').style.borderColor = 'red';\n        valid = false;\n      } else document.querySelector('#surname').style.borderColor = 'black';\n      if (!this.password) {\n        document.querySelector('#password').style.borderColor = 'red';\n        valid = false;\n      } else document.querySelector('#password').style.borderColor = 'black';\n      return valid;\n    },\n    validateSignup() {\n      let valid = true;\n      if (!this.password2 || this.password !== this.password2) {\n        document.querySelector('#password2').style.borderColor = 'red';\n        valid = false;\n      } else document.querySelector('#password2').style.borderColor = 'black';\n      if (!this.email || !this.email.includes(\"@\")) {\n        document.querySelector('#email').style.borderColor = 'red';\n        valid = false;\n      } else document.querySelector('#email').style.borderColor = 'black';\n      return valid;\n    }\n  },\n  mounted() {\n    let user = this.$store.state.user;\n    if (user && user.role !== 'user') this.$router.replace('/' + user.role);\n  }\n};","map":{"version":3,"mappings":"AAuCA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACAC;MACAC;IACA;IACAC;MACA;QACAC;UACAC;UACAC;UACAZ;YACAC;YACAC;YACAC;YACAE;UACA;QACA;UACAQ;UACA;YAAAC;YAAAd;UAAA;QACA;UACAe;QACA;MACA;IACA;IACAC;MACA;QACAN;UACAC;UACAC;UACAZ;YACAC;YACAC;YACAC;UACA;QACA;UACA;UACA;UACAO;UACA;YAAAI;YAAAd;UAAA;UACA;YACA;YACA;YACA,oDACA;UACA;QACA;UACAe;QACA;MACA;IACA;IACAE;MACA;MACA;QAAAT;QAAAU;MAAA,OACAV;MACA;QAAAA;QAAAU;MAAA,OACAV;MACA;QAAAA;QAAAU;MAAA,OACAV;MACA;IACA;IACAW;MACA;MACA;QAAAX;QAAAU;MAAA,OACAV;MACA;QAAAA;QAAAU;MAAA,OACAV;MACA;IACA;EACA;EACAY;IACA;IACA;EACA;AACA","names":["name","data","firstname","surname","password","password2","email","methods","signup","document","signupPost","axios","method","url","location","success","console","login","validateLogin","valid","validateSignup","mounted"],"sourceRoot":"src/components/users","sources":["userLogin.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>{{ $t('button.login') }}</h1>\r\n\r\n    <form>\r\n      <h4>{{ $t('attribute.firstname') }}</h4>\r\n      <input id=\"firstname\" v-model=\"firstname\" type=\"text\" required />\r\n\r\n      <h4>{{ $t('attribute.surname') }}</h4>\r\n      <input id=\"surname\" v-model=\"surname\" type=\"text\" required />\r\n\r\n      <h4>{{ $t('attribute.password') }}</h4>\r\n      <input id=\"password\" v-model=\"password\" type=\"password\" required />\r\n\r\n      <v-btn class=\"btn btn-dark ma-1\" type=\"button\" v-on:click=\"login\">{{ $t('button.login') }}</v-btn>\r\n      <v-btn class=\"btn btn-dark ma-1\" type=\"button\" v-on:click=\"signup\">{{ $t('button.signup') }}</v-btn>\r\n    </form>\r\n\r\n    <div id=\"google\">\r\n      <h1><span class=\"fa fa-lock\"></span> Social Authentication</h1>\r\n      <p>Login or Register with:</p>\r\n      <a href=\"/auth/google\" class=\"btn btn-danger\"><span class=\"fa fa-google\"></span> SignIn with Google</a>\r\n    </div>\r\n\r\n    <div id=\"signup\">\r\n      <h1>{{$t('attribute.signup')}}</h1>\r\n\r\n      <h4>{{ $t('attribute.password') }} (confirm)</h4>\r\n      <input id=\"password2\" v-model=\"password2\" type=\"password\" required />\r\n\r\n      <h4>{{ $t('attribute.email') }}</h4>\r\n      <input id=\"email\" v-model=\"email\" type=\"email\" required />\r\n\r\n      <v-btn class=\"btn btn-dark ma-1\" small type=\"button\" v-on:click=\"signupPost\">{{ $t('button.signup') }}</v-btn>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"userLogin\",\r\n  data:()=>({\r\n    firstname:null,\r\n    surname:null,\r\n    password:null,\r\n    password2:null,\r\n    email:null\r\n  }),\r\n  methods:{\r\n    signup(){\r\n      document.querySelector('#signup').style.display = 'block'\r\n    },\r\n    signupPost(){\r\n      if(this.validateLogin() && this.validateSignup()){\r\n        axios({\r\n          method: 'post',\r\n          url: 'http://localhost:3000/users/signup',\r\n          data: {\r\n            firstname: this.firstname,\r\n            surname: this.surname,\r\n            password: this.password,\r\n            email: this.email\r\n          }\r\n        }).then(result=>{\r\n          location.reload()\r\n          this.$store.commit('setMessage', {success:1,data:result.data.data.data})\r\n        }).catch(error=>{\r\n          console.log(error)\r\n        })\r\n      }\r\n    },\r\n    login(){\r\n      if(this.validateLogin()){\r\n        axios({\r\n          method: 'post',\r\n          url: 'http://localhost:3000/users/login',\r\n          data: {\r\n            firstname: this.firstname,\r\n            surname: this.surname,\r\n            password: this.password\r\n          }\r\n        }).then(result=>{\r\n          let data = result.data.data\r\n          let token = result.data.data.token\r\n          axios.defaults.headers.common['Authorization'] = token\r\n          this.$store.commit('setMessage', {success:data.success,data:data.message})\r\n          if(data.data.length !== 0){\r\n            this.$store.commit('setUser',data.data)\r\n            let role = data.data.role\r\n            if(role === 'user') this.$router.replace('/')\r\n            else this.$router.replace('/'+data.data.role)\r\n          }\r\n        }).catch(error=>{\r\n          console.log(error)\r\n        })\r\n      }\r\n    },\r\n    validateLogin(){\r\n      let valid = true\r\n      if(!this.firstname) {document.querySelector('#firstname').style.borderColor = 'red';valid=false}\r\n      else document.querySelector('#firstname').style.borderColor = 'black'\r\n      if(!this.surname) {document.querySelector('#surname').style.borderColor = 'red';valid=false}\r\n      else document.querySelector('#surname').style.borderColor = 'black'\r\n      if(!this.password) {document.querySelector('#password').style.borderColor = 'red';valid=false}\r\n      else document.querySelector('#password').style.borderColor = 'black'\r\n      return valid\r\n    },\r\n    validateSignup(){\r\n      let valid = true\r\n      if(!this.password2 || this.password !== this.password2) {document.querySelector('#password2').style.borderColor = 'red'; valid=false}\r\n      else document.querySelector('#password2').style.borderColor = 'black'\r\n      if(!this.email || !this.email.includes(\"@\")) {document.querySelector('#email').style.borderColor = 'red'; valid=false}\r\n      else document.querySelector('#email').style.borderColor = 'black'\r\n      return valid\r\n    },\r\n  },\r\n  mounted(){\r\n    let user = this.$store.state.user\r\n    if(user && user.role !== 'user') this.$router.replace('/'+user.role)\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\nform{\r\n  border-radius: 20px;\r\n  width: 80vw;\r\n  margin: 10px 10vw;\r\n}\r\n#signup{\r\n  display: none;\r\n  background-color: #3f4545;\r\n  color: white;\r\n  width: 80vw;\r\n  margin: 10px 10vw;\r\n  padding: 10px;\r\n  border-radius: 20px;\r\n}\r\n#google{\r\n  text-align: center;\r\n  border: 2px solid #ef6363;\r\n  color: #ef6363;\r\n  width: 80vw;\r\n  margin: 10px 10vw;\r\n  border-radius: 50px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}